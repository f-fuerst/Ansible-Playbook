---
- hosts: localhost
  connection: local
  become: true

  vars_prompt:
  - name: tladmin_password
    prompt: "Password for tladmin"

  - name: texlive_scheme
    prompt: "Enter TeX Live scheme to be installed"
    private: no

  - name: texlive_mirror
    prompt: "Enter Mirror for downloading TeX Live"
    private: no

  tasks:
  - name: Install TeX Live dependencies
    ansible.builtin.dnf:
      name:
        - perl-File-Find
        - libnsl
        - perl-Unicode-Normalize
        - perl-sigtrap
      state: present

  - name: Import Key for RPMFusion free repo
    ansible.builtin.rpm_key:
      key: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020
      fingerprint: E9A4 91A3 DE24 7814 E7E0 67EA E06F 8ECD D651 FF2E

  - name: Import Key for RPMFusion non-free repo
    ansible.builtin.rpm_key:
      key: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020
      fingerprint: 79BD B88F 9BBF 7391 0FD4 095B 6A2A F961 9484 3C65

  - name: Install RPMFusion repo
    ansible.builtin.dnf:
      name:
        - "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm"
        - "https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm"
      state: present

  - name: Install appstream data from RPMFusion
    ansible.builtin.dnf:
      name: '@core'
      state: present

  - name: Install codecs from RPMFusion
    ansible.builtin.dnf:
      name: '@multimedia'
      install_weak_deps: no
      exclude: PackageKit-gstreamer-plugin
      state: present

  - name: Install VLC Media Player and ffmpegthumbs
    ansible.builtin.dnf:
      name:
        - vlc
        - ffmpegthumbs
      state: present

  - name: Install KeePassXC
    ansible.builtin.dnf:
      name: keepassxc
      state: present

  - name: Installing epdfinfo Server Prerequisites for Spacemacs PDF-Layer
    ansible.builtin.dnf:
      name:
        - make
        - automake
        - gcc
        - libpng-devel
        - zlib-devel
        - poppler-glib-devel
        - ImageMagick
      state: present

  - name: Install Editors
    ansible.builtin.dnf:
      name:
        - gvim
        - emacs
      state: present

  - name: Enable Flathub repo
    community.general.flatpak_remote:
      name: flathub
      state: present
      flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

  - name: Install Cider flatpak
    community.general.flatpak:
      name: sh.cider.Cider
      state: present

  - name: Install Spacemacs
    ansible.builtin.git:
      repo: 'https://github.com/syl20bnr/spacemacs.git'
      dest: /home/zar/.emacs.d
      version: latest

  - name: Download Vimplug
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: /home/zar/.vim/autoload
      owner: zar
      group: zar

  - name: Copy Dotfiles
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/Files/dotfiles/"
      dest: /home/zar
      owner: zar
      group: zar
      mode: 0644

  - name: Create tladmin user
    ansible.builtin.user:
      name: tladmin
      group: tladmin
      system: yes
      home: /usr/local/texlive
      shell: /bin/sh
      password: "{{ tladmin_password }}"
    no_log: true

  - name: Download TeX Live Installer
    ansible.builtin.get_url:
      url: https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
      owner: tladmin
      group: tladmin
      dest: /usr/local/texlive
    become: true
    become_user: tladmin

  - name: Unpack TeX Live Installer
    ansible.builtin.unarchive:
      src: /usr/local/texlive/install-tl-unx.tar.gz
      dest: /usr/local/texlive
      remote_src: yes
    become: true
    become_user: tladmin

  - name: Set TeX Live Installer Profile
    vars:
      texlive_release: 2022
    ansible.builtin.template:
      src: "{{ playbook_dir }}/Files/texlive.profile.j2"
      dest: /usr/local/texlive/install-tl-2*/texlive.profile
      owner: tladmin
      group: tladmin
      mode: u=rw,g=r,o=r
    register: texlive_profile

  - name: Start TeX Live Installation
    ansible.builtin.shell: >
      cd /usr/local/texlive/install-tl-2* ;
      ./install-tl -profile {{ texlive_profile.dest }} -repository {{ texlive_mirror }} ;
      grep -q "Welcome to TeX Live!" /usr/local/texlive/2022/install-tl.log
    become: true
    become_user: tladmin
    register: tl_install
    changed_when: tl_install.rc == 0

  - name: Add TeX Live to PATH
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/Files/texlive.sh"
      dest: /etc/profile.d/texlive.sh
      owner: root
      group: root
      mode: u=rw,g=r,o=r

  - name: Copy TeX Live dummy package
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/Files/texlive-dummy-2022-1.fc36.noarch.rpm"
      dest: /home/zar/Downloads/texlive-dummy-2022-1.fc36.noarch.rpm
      owner: zar
      group: zar
      mode: 0664

  - name: Install TeX Live dummy package
    ansible.builtin.dnf:
      name: /home/zar/Downloads/texlive-dummy-2022-1.fc36.noarch.rpm
      state: present

  - name: Unpack texlab #evtl. nachher l√∂schen
    ansible.builtin.unarchive:
      src: https://github.com/latex-lsp/texlab/releases/latest/download/texlab-x86_64-linux.tar.gz
      dest: /usr/local/texlive/2022/bin/x86_64-linux/texlab
      owner: tladmin
      group: tladmin
      mode: 0755

  - name: Install Snapper
    ansible.builtin.dnf:
      name:
        - snapper
        - python3-dnf-plugin-snapper
      state: present

  - name: Unmount /.snapshots
    ansible.posix.mount:
      path: /.snapshots
      state: unmounted

  - name: Remove /.snapshots
    ansible.builtin.file:
      path: /.snapshots
      state: absent

  - name: Create snapper configuration for root
    ansible.builtin.command: snapper -c root create-config /
    register: snapper_create_config
    changed_when: snapper_create_config.rc == 0

  - name: Delete /.snapshots subvolume
    ansible.builtin.command: btrfs subvolume delete /.snapshots
    register: snapper_delete_subvolume
    changed_when: snapper_delete_subvolume.rc == 0

  - name: Create /.snapshots directory
    ansible.builtin.file:
      path: /.snapshots
      state: directory
      mode: 0644
      owner: root
      group: zar

  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Mount all
    ansible.builtin.command: mount -a
    register: mount
    changed_when: mount.rc == 0

  - name: Enable snapshot booting
    ansible.builtin.lineinfile:
      path: /etc/default/grub
      line: 'SUSE_BTRFS_SNAPSHOT_BOOTING="true"'
      insertafter: EOF
      state: present

  - name: Update grub.cfg
    ansible.builtin.command: grub2-mkconfig -o /boot/grub2/grub.cfg
    register: grub2_config
    changed_when: grub2_config.rc == 0

  - name: Modify grub.cfg in EFI directory
    ansible.builtin.lineinfile:
      path: /boot/efi/EFI/fedora/grub.cfg
      line: 'btrfs_relative_path="yes"'
      insertbefore: BOF
      state: present

  - name: Add username to snapper's root config
    ansible.builtin.command: snapper -c root set-config ALLOW_USERS=zar SYNC_ACL=yes
    register: snapper_useradd
    changed_when: snapper_useradd.rc == 0

  - name: Disable hidden grub menu
    ansible.builtin.command: grub2-editenv - unset menu_auto_hide
    register: grud_hide
    changed_when: grub_hide.rc == 0

  - name: Clone grub-btrfs repo
    ansible.builtin.git:
      repo: 'https://github.com/Antynea/grub-btrfs.git'
      dest: /home/zar/Downloads/grub-btrfs
      version: latest

  - name: Install grub-btrfs
    community.general.make:
      chdir: /home/zar/Downloads/grub-btrfs
      target: install

  - name: Change grub-btrfs config
    ansible.builtin.copy:
      dest: /etc/default/grub-btrfs/config
      src: "{{ playbook_dir }}/Files/config"
      mode: 0644

  - name: Update grub.cfg again
    ansible.builtin.command: grub2-mkconfig -o /boot/grub2/grub.cfg
    register: grub2_config_btrfs
    changed_when: grub2_config_btrfs.rc == 0

  - name: Enable grub-btrfsd service
    ansible.builtin.systemd:
      name: grub-btrfsd
      masked: no
      enabled: yes
      state: started
